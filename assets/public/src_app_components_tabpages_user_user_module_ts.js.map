{"version":3,"file":"src_app_components_tabpages_user_user_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAA2E;AAElB;AACO;AACiB;AACvB;AACjB;AACK;AACW;IAO5C,aAAa,SAAb,aAAa;IASxB,YACU,eAAgC,EAChC,eAA+B,EAC/B,EAAe,EACf,UAA0B,EAC1B,MAAc;QAJd,oBAAe,GAAf,eAAe,CAAiB;QAChC,oBAAe,GAAf,eAAe,CAAgB;QAC/B,OAAE,GAAF,EAAE,CAAa;QACf,eAAU,GAAV,UAAU,CAAgB;QAC1B,WAAM,GAAN,MAAM,CAAQ;QAZxB,cAAS,GAAiB,IAAI,mEAAY,EAAE,CAAC;QAC7C,aAAQ,GAAQ,EAAE,CAAC;QACnB,eAAU,GAAY,KAAK,CAAC;QAE5B,SAAI,GAAY,IAAI,CAAC;QAUnB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAE5B,cAAc,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YACzC,cAAc,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YACzC,gBAAgB,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;SAC5C,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,EAAE,EAAE,CAAC,CAAC;IACT,CAAC;IAEK,WAAW;;YACf,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,gBAAgB,CAAC;YAC7C,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG;gBACxB,SAAS,EAAE,IAAI,CAAC,iBAAiB,EAAE;aACpC,CAAC;YACF,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,wEAA2B,CAAC;YACrD,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAClE,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;QACzB,CAAC;KAAA;IAEO,iBAAiB;QACvB,IAAI,cAAc,GAAC,EAAE,CAAC;QACtB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC/C,cAAc,GAAG,GAAG,CAAC;QACvB,CAAC,CAAC,CAAC;QACH,OAAO,cAAc,CAAC;IACxB,CAAC;CAkDF;;YA1GQ,oEAAe;YAFf,0EAAc;YACd,uDAAW;YAFX,mEAAc;YAId,mDAAM;;AASF,aAAa;IALzB,wDAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,4JAAoC;;KAErC,CAAC;GACW,aAAa,CAgGzB;AAhGyB;;;;;;;;;;;;;;;;;;;;;ACfoC;AACf;AAEE;AAEE;IAWtC,UAAU,SAAV,UAAU;CAAI;AAAd,UAAU;IATtB,uDAAQ,CAAC;QACR,YAAY,EAAE;YACZ,0DAAa;SACd;QACD,OAAO,EAAE;YACP,wDAAY;YACZ,kEAAqB,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,0DAAa,EAAE,CAAC,CAAC;SAChE;KACF,CAAC;GACW,UAAU,CAAI;AAAJ;;;;;;;;;;;;;;;AChBvB,iEAAe,48BAA48B,oBAAoB,+MAA+M,kBAAkB,+MAA+M,mBAAmB,qNAAqN,mBAAmB,2MAA2M,gBAAgB,2MAA2M,kBAAkB,iPAAiP,kBAAkB,kFAAkF","sources":["./src/app/components/tabpages/user/user.component.ts","./src/app/components/tabpages/user/user.module.ts","./src/app/components/tabpages/user/user.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild, DebugElement } from '@angular/core';\r\nimport { ModalController, AlertController } from '@ionic/angular';\r\nimport { SQLExecService } from 'src/app/shared/services';\r\nimport { UtilityService } from 'src/app/shared/utility.service';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { IdentityService } from 'src/app/shared/services';\r\nimport { Router } from '@angular/router';\r\nimport { CommandType } from 'src/app/helpers';\r\nimport { ApiParameter } from 'src/app/shared/api-params';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.scss'],\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n  apiParams: ApiParameter = new ApiParameter();\r\n  employee: any = {};\r\n  submitting: boolean = false;\r\n  authForm: FormGroup;\r\n  hide: boolean = true;\r\n  subscription: any;\r\n\r\n  constructor(\r\n    private identityService: IdentityService,\r\n    private _utilityService: UtilityService,\r\n    private fb: FormBuilder,\r\n    private sqlService: SQLExecService,\r\n    private router: Router\r\n  ) {\r\n    this.authForm = this.fb.group({\r\n\r\n      'password_old': ['', Validators.required],\r\n      'password_new': ['', Validators.required],\r\n      'password_newcf': ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    setTimeout(() => {\r\n      this.getInfoUser();\r\n    }, 10);\r\n  }\r\n\r\n  async getInfoUser() {\r\n    this.apiParams.strSQLExec = \"sp_API_GetUser\";\r\n    this.apiParams.paraList = {\r\n      MEMBER_ID: this.getStrCurrentUser()\r\n    };\r\n    this.apiParams.cmdType = CommandType.StoredProcedure;\r\n    const res = await this.sqlService.ExecuteReturnDt(this.apiParams);\r\n    this.employee = res[0];\r\n  }\r\n\r\n  private getStrCurrentUser() {\r\n    let strCurrentUser='';\r\n    this.identityService.currentUser.subscribe(res => {\r\n      strCurrentUser = res;\r\n    }); \r\n    return strCurrentUser;\r\n  }\r\n  /* logout() {\r\n    this.identityService.purgeAuth();\r\n    this.router.navigateByUrl(\"/login\");\r\n  } */\r\n\r\n  /* async ChangPass(form: any) {\r\n    try {\r\n      const user = this.identityService.currentUserSubject.getValue().Member_ID;\r\n      const credentials = this.authForm.value;\r\n      this.submitting = true;\r\n\r\n      this.apiParams.strSQLExec = \"SELECT dbo.fn_Decrypt(CheckPass) FROM dbo.L00MEMBER WHERE Member_ID = '\" + user + \"'\";\r\n      this.apiParams.cmdType = CommandType.Text;\r\n      const res_PassOld = await this.sqlService.ExecuteReturnDt(this.apiParams);\r\n      if (res_PassOld[0].column1 != credentials.password_old) {\r\n        this._utilityService.showAlert('Mật khẩu củ chưa chính xác');\r\n        credentials.password_old = null;\r\n        this.submitting = false;\r\n        return;\r\n      }\r\n\r\n\r\n      if (credentials.password_new != credentials.password_newcf) {\r\n        this._utilityService.showAlert('Mật khẩu khác nhau vui lòng thử lại sau');\r\n        credentials.password_new = credentials.password_newcf = null;\r\n        this.submitting = false;\r\n        return;\r\n      }\r\n\r\n      this.apiParams.strSQLExec = \"UPDATE L00MEMBER SET CheckPass = dbo.fn_Encrypt('\" + credentials.password_new + \"') WHERE Member_ID = '\" + user + \"'\";\r\n      this.apiParams.cmdType = CommandType.Text;\r\n      const res = await this.sqlService.Execute(this.apiParams);\r\n      if (!res) {\r\n        this._utilityService.showAlert('Có lỗi xảy ra vui lòng thử lại sau');\r\n        this.submitting = false;\r\n        return;\r\n      }\r\n      this._utilityService.showAlert('Đổi mật khẩu thành công');\r\n    } catch (err) {\r\n\r\n      return;\r\n    } finally {\r\n      this.submitting = false;\r\n    }\r\n\r\n  } */\r\n\r\n\r\n\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { UserComponent } from './user.component';\r\n\r\nimport { SharedModule } from '../../shared.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UserComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([{ path: '', component: UserComponent }])\r\n  ]\r\n})\r\nexport class UserModule { }\r\n","export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"asp\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <!-- <ion-back-button defaultHref=\\\"/tabs/home\\\" text=\\\"\\\"></ion-back-button> -->\\r\\n      <ion-button [fill]=\\\"'clear'\\\" routerLink=\\\"/tabs/home\\\">\\r\\n        <ion-icon slot=\\\"icon-only\\\" ios=\\\"chevron-back-outline\\\" md=\\\"arrow-back-outline\\\" size=\\\"default\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n    \\r\\n    <ion-title>Nhân viên</ion-title>\\r\\n   \\r\\n    <!-- <ion-buttons slot=\\\"end\\\" fill=\\\"clear\\\">\\r\\n      <ion-button>\\r\\n        <ion-icon slot=\\\"icon-only\\\" ios=\\\"filter-outline\\\" size=\\\"default\\\" md=\\\"filter-sharp\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n\\r\\n    </ion-buttons> -->\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-list class=\\\"ion-margin-top\\\">\\r\\n    <ion-item>\\r\\n      <ion-icon slot=\\\"start\\\" name=\\\"person-circle-outline\\\" color=\\\"medium\\\" size=\\\"default\\\"></ion-icon>\\r\\n      <ion-label>\\r\\n        <h3>{{employee.member_ID}}</h3>\\r\\n      </ion-label>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-icon slot=\\\"start\\\" name=\\\"bookmark-sharp\\\" color=\\\"medium\\\" size=\\\"default\\\"></ion-icon>\\r\\n      <ion-label>\\r\\n        <h3>{{employee.ma_CbNv}}</h3>\\r\\n      </ion-label>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-icon slot=\\\"start\\\" name=\\\"bookmark-sharp\\\" color=\\\"medium\\\" size=\\\"default\\\"></ion-icon>\\r\\n      <ion-label>\\r\\n        <h3>{{employee.ten_CbNv}}</h3>\\r\\n      </ion-label>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-icon slot=\\\"start\\\" name=\\\"phone-portrait-sharp\\\" color=\\\"medium\\\" size=\\\"default\\\"></ion-icon>\\r\\n      <ion-label>\\r\\n        <h3>{{employee.so_Phone}}</h3>\\r\\n      </ion-label>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-icon slot=\\\"start\\\" name=\\\"mail-sharp\\\" color=\\\"medium\\\" size=\\\"default\\\"></ion-icon>\\r\\n      <ion-label>\\r\\n        <h3>{{employee.email}}</h3>\\r\\n      </ion-label>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-icon slot=\\\"start\\\" name=\\\"card-sharp\\\" color=\\\"medium\\\" size=\\\"default\\\"></ion-icon>\\r\\n      <ion-label>\\r\\n        <h3>{{employee.so_CMND}}</h3>\\r\\n      </ion-label>\\r\\n    </ion-item>\\r\\n    <ion-item lines=\\\"none\\\">\\r\\n      <ion-icon slot=\\\"start\\\" name=\\\"map-sharp\\\" color=\\\"medium\\\" size=\\\"default\\\"></ion-icon>\\r\\n      <ion-label class=\\\"ion-text-wrap\\\">\\r\\n        <h3>{{employee.dia_Chi}}</h3>\\r\\n      </ion-label>\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n</ion-content>\";"],"names":[],"sourceRoot":"webpack:///"}