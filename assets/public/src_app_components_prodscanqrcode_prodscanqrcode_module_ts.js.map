{"version":3,"file":"src_app_components_prodscanqrcode_prodscanqrcode_module_ts.js","mappings":"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","sources":["./src/app/components/prodscanqrcode/core/index.ts","./src/app/components/prodscanqrcode/core/services/empscan.service.ts","./src/app/components/prodscanqrcode/core/services/index.ts","./src/app/components/prodscanqrcode/filter-emp-modal.component.ts","./src/app/components/prodscanqrcode/filter-stage-modal.component.ts","./src/app/components/prodscanqrcode/filter-wo-modal.component.ts","./src/app/components/prodscanqrcode/list-machine.component.ts","./src/app/components/prodscanqrcode/list.component.ts","./src/app/components/prodscanqrcode/prodscanqrcode.module.ts","./src/app/components/prodscanqrcode/filter-emp-modal.component.html","./src/app/components/prodscanqrcode/filter-stage-modal.component.html","./src/app/components/prodscanqrcode/filter-wo-modal.component.html","./src/app/components/prodscanqrcode/list-machine.component.html","./src/app/components/prodscanqrcode/list.component.html"],"sourcesContent":["export * from './services';","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  HttpClient,\r\n  HttpResponse,\r\n  HttpErrorResponse,\r\n  HttpHeaders,\r\n  HttpParams,\r\n  HttpEvent,\r\n} from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { promise } from \"selenium-webdriver\";\r\nimport { ApiService } from 'src/app/shared/services';\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EmpScanService {\r\n  private urlSegement = {\r\n    GetListEmpCheckIn: \"/EmpScan/GetListEmpCheckIn\",\r\n    GetListMachineCheckIn: \"/EmpScan/GetListMachineCheckIn\",\r\n    GetEmpsByLine: \"/EmpScan/GetEmpsByLine\",\r\n    GetWOsByLine: \"/EmpScan/GetWOsByLine\",\r\n    GetStageIDByWO: \"/EmpScan/GetStageIDByWO\",\r\n    DeleteEmpCheckIn: \"/EmpScan/DeleteEmpCheckIn\",\r\n    DeleteMachineCheckIn: \"/EmpScan/DeleteMachineCheckIn\",\r\n    GetEmpByQRCode: \"/EmpScan/GetEmpByQRCode\",\r\n    GetMachineByQRCode: \"/EmpScan/GetMachineByQRCode\",\r\n    SaveInEmpByQRCode: \"/EmpScan/SaveInEmpByQRCode\",\r\n    UpdateEmpCheckIn: \"/EmpScan/UpdateEmpCheckIn\",\r\n    SaveMachineByQRCode: \"/EmpScan/SaveMachineByQRCode\"\r\n  };\r\n  constructor(private http: HttpClient, private apiService: ApiService) {}\r\n  \r\n  async GetListEmpCheckIn(typeOfScanner: any, userName: any, woDocNo: any): Promise<any> {\r\n    const params = {\r\n      woDocNo : woDocNo\r\n    };\r\n    const res = await this.apiService.post(this.urlSegement.GetListEmpCheckIn, params);\r\n    return res;\r\n  }\r\n\r\n  async GetListMachineCheckIn(typeOfScanner: any, userName: any, woDocNo: any): Promise<any> {\r\n    const params = {\r\n      woDocNo : woDocNo\r\n    };\r\n    const res = await this.apiService.post(this.urlSegement.GetListMachineCheckIn, params);\r\n    return res;\r\n  }\r\n\r\n  async GetEmpsByLine(userName: any, woDocNo: any): Promise<any> {\r\n    const params = {\r\n      userName : userName,\r\n      woDocNo : woDocNo\r\n    };\r\n    const res = await this.apiService.post(this.urlSegement.GetEmpsByLine, params);\r\n    return res;\r\n  }\r\n  async GetWOsByLine(userName: any): Promise<any> {\r\n    const params = {\r\n      userName : userName\r\n    };\r\n    const res = await this.apiService.get(this.urlSegement.GetWOsByLine, params);\r\n    return res;\r\n  }\r\n  async GetStageIDByWO(woDocNo: any): Promise<any> {\r\n    const params = {\r\n      woDocNo : woDocNo\r\n    };\r\n    const res = await this.apiService.post(this.urlSegement.GetStageIDByWO, params);\r\n    return res;\r\n  }\r\n  async DeleteEmpCheckIn(item: any): Promise<any> {\r\n    const params = {\r\n      item : item\r\n    };\r\n    const res = await this.apiService.post(this.urlSegement.DeleteEmpCheckIn, params);\r\n    return res;\r\n  }\r\n\r\n  async DeleteMachineCheckIn(item: any): Promise<any> {\r\n    const params = {\r\n      item : item\r\n    };\r\n    const res = await this.apiService.post(this.urlSegement.DeleteMachineCheckIn, params);\r\n    return res;\r\n  }\r\n\r\n  async GetEmpByQRCode(item: any): Promise<any> {\r\n    const params = {\r\n      item : item\r\n    };\r\n    const res = await this.apiService.post(this.urlSegement.GetEmpByQRCode, params);\r\n    return res;\r\n  }\r\n\r\n  async GetMachineByQRCode(item: any): Promise<any> {\r\n    const params = {\r\n      item : item\r\n    };\r\n    const res = await this.apiService.post(this.urlSegement.GetMachineByQRCode, params);\r\n    return res;\r\n  }\r\n\r\n  async SaveInEmpByQRCode(item: any): Promise<any> {\r\n    const params = {\r\n      item : item\r\n    };\r\n    const res = await this.apiService.post(this.urlSegement.GetEmpByQRCode, params);\r\n    return res;\r\n  }\r\n\r\n  async SaveMachineByQRCode(item: any): Promise<any> {\r\n    const params = {\r\n      item : item\r\n    };\r\n    const res = await this.apiService.post(this.urlSegement.GetMachineByQRCode, params);\r\n    return res;\r\n  }\r\n\r\n  async UpdateEmpCheckIn(item: any): Promise<any> {\r\n    const params = {\r\n      item : item\r\n    };\r\n    const res = await this.apiService.post(this.urlSegement.UpdateEmpCheckIn, params);\r\n    return res;\r\n  }\r\n}\r\n","export * from './empscan.service';\r\n","import { Component, OnInit, ViewChild, ElementRef, Input } from '@angular/core';\n\nimport { ModalController, NavParams, AlertController } from '@ionic/angular';\nimport { DataToolService, SQLExecService, VoucherService } from '../../shared/services';\n\nimport { ApiParameter } from 'src/app/shared/api-params';\nimport { IdentityService } from '../../shared/services'\nimport * as _ from 'lodash';\nimport { UtilityService } from '../../shared/utility.service';\nimport { CommandType } from '../../helpers';\nimport { EmpScanService } from './core/services/empscan.service';\n\n\n@Component({\n  selector: 'app-filter-emp-modal',\n  templateUrl: './filter-emp-modal.component.html',\n  styleUrls: ['./filter-emp-modal.component.scss'],\n})\nexport class FilterEmpModalComponent implements OnInit {\n  model: any;\n  loading: boolean = false;\n  searchTerm: string = '';\n  radioModel: string ='';\n  member_Id: string ='';\n  woDocNo: string = '';\n  emps: any[] = [];\n  apiParams: ApiParameter = new ApiParameter();\n\n  constructor(\n    private identityService: IdentityService,\n    private sqlService: SQLExecService,\n    private modalController: ModalController,\n    public _utilityService: UtilityService,\n    private navParams: NavParams,\n    private empscanService: EmpScanService\n  ) { }\n\n  ngOnInit() {\n    this.filterEmps();\n  }\n\n  async filterEmps() {\n    this.loading = true;\n    this.member_Id = await this.identityService.getStrMemberId();\n    const res = await this.empscanService.GetEmpsByLine(this.member_Id, this.woDocNo).finally(() => this.loading = false);\n    this.emps = res;\n  }\n  \n  async onChangeRadio(item) {\n    await this.modalController.dismiss(item);\n  }\n\n  async closeModal(ok: boolean = false) {\n    if (ok) {\n      await this.modalController.dismiss(this.model);\n    } else {\n      await this.modalController.dismiss(null);\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ModalController, NavParams } from '@ionic/angular';\nimport { ApiParameter, UtilityService } from 'src/app/shared';\nimport { IdentityService, SQLExecService } from 'src/app/shared/services';\nimport { EmpScanService } from './core';\n\n@Component({\n  selector: 'app-filter-stage-modal',\n  templateUrl: './filter-stage-modal.component.html',\n  styleUrls: ['./filter-stage-modal.component.scss'],\n})\nexport class FilterStageModalComponent implements OnInit {\n  woDocNo: any;\n  model: any;\n  loading: boolean = false;\n  searchTerm: string = '';\n  radioModel: string = '';\n  member_Id: string = '';\n  stages: any[] = [];\n  selectedCheckboxes: any[] = [];\n  apiParams: ApiParameter = new ApiParameter();\n\n  constructor(\n    private identityService: IdentityService,\n    private sqlService: SQLExecService,\n    private modalController: ModalController,\n    public _utilityService: UtilityService,\n    private navParams: NavParams,\n    private empscanService: EmpScanService\n  ) { }\n\n  ngOnInit() {\n    this.filterStages();\n  }\n\n  async filterStages() {\n    this.loading = true;\n    const res = await this.empscanService.GetStageIDByWO(this.woDocNo).finally(() => this.loading = false);\n    this.stages = res;\n  }\n  \n  async onChangeRadio(item) {\n    await this.modalController.dismiss(item);\n  }\n  async handleCheckboxChange(event, item) {\n    const isChecked = event.detail.checked;\n    debugger\n    if (isChecked) {\n        // Add to selected checkboxes\n        this.selectedCheckboxes.push(item.stageID);\n    }\n    else {\n        // Remove from selected checkboxes\n        const index = this.selectedCheckboxes.findIndex((item) => item.stageIDID === item.stageID);\n        if (index !== -1) {\n            this.selectedCheckboxes.splice(index, 1);\n        }\n    }\n}\n  async closeModal(ok: boolean = false) {\n    this.modalController.dismiss(this.selectedCheckboxes);\n  }\n}\n","import { Component, OnInit, ViewChild, ElementRef, Input } from '@angular/core';\n\nimport { ModalController, NavParams, AlertController } from '@ionic/angular';\nimport { DataToolService, SQLExecService, VoucherService } from '../../shared/services';\n\nimport { ApiParameter } from 'src/app/shared/api-params';\nimport { IdentityService } from '../../shared/services'\nimport * as _ from 'lodash';\nimport { UtilityService } from '../../shared/utility.service';\nimport { CommandType } from '../../helpers';\nimport { EmpScanService } from './core/services/empscan.service';\n\n\n@Component({\n  selector: 'app-filter-wo-modal',\n  templateUrl: './filter-wo-modal.component.html',\n  styleUrls: ['./filter-wo-modal.component.scss'],\n})\nexport class FilterWoModalComponent implements OnInit {\n\n  model: any;\n  loading: boolean = false;\n  searchTerm: string = '';\n  radioModel: string ='';\n  member_Id: string ='';\n  wos: any[] = [];\n  apiParams: ApiParameter = new ApiParameter();\n\n  constructor(\n    private identityService: IdentityService,\n    private sqlService: SQLExecService,\n    private modalController: ModalController,\n    public _utilityService: UtilityService,\n    private navParams: NavParams,\n    private empscanService: EmpScanService\n  ) { }\n\n  ngOnInit() {\n    this.filterWOs()\n  }\n\n  async filterWOs() {\n    this.loading = true;\n    this.member_Id = await this.identityService.getStrMemberId();\n    const res = await this.empscanService.GetWOsByLine(this.member_Id).finally(() => this.loading = false);\n    this.wos = res;\n  }\n  \n  async onChangeRadio(item) {\n    await this.modalController.dismiss(item);\n  }\n\n  async closeModal(ok: boolean = false) {\n    if (ok) {\n      await this.modalController.dismiss(this.model);\n    } else {\n      await this.modalController.dismiss(null);\n    }\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ModalController, NavParams, AlertController } from \"@ionic/angular\";\n\nimport * as _ from \"lodash\";\n\nimport { BarcodeScanner,BarcodeScannerOptions } from '@awesome-cordova-plugins/barcode-scanner/ngx';\n\nimport { EmpScanService } from \"./core/services/empscan.service\"\nimport { UtilityService } from \"src/app/shared\";\nimport { FilterWoModalComponent } from \"./filter-wo-modal.component\";\nimport { IdentityService } from \"src/app/shared/services\";\nimport { FilterEmpModalComponent } from \"./filter-emp-modal.component\";\n\n@Component({\n  selector: 'app-list-machine',\n  templateUrl: './list-machine.component.html',\n  styleUrls: ['./list-machine.component.scss'],\n})\nexport class ListMachineComponent implements OnInit {\n  searchTerm: string = \"\";\n  loading: boolean = true;\n  routeLink: string = \"\";\n  today: any = new Date();\n  barcodeScannerOptions: BarcodeScannerOptions;\n  userName: any;\n  emps: any = [];\n  data: any = [];\n  model: any = [];\n  woDocNo: any;\n  empID: any;\n  isNativePlatform: boolean = true;\n  platformStr: string = 'web';\n  param: { typeOfScanner: number; username: any; woDocNo: any; };\n  paramqrmc: { MachineID: any; MachineName: any; DeptName: any; StartDate: any; CheckInDT: Date; Username: any};\n  \n  constructor(\n    private empScanService: EmpScanService,\n    private alertController: AlertController,\n    private modalController: ModalController,\n    private identityService: IdentityService,\n    private utilityService: UtilityService,\n    private barcodeScanner: BarcodeScanner,\n  ) { }\n\n  ngOnInit() {}\n\n  ionViewWillEnter() {\n    setTimeout(() => {\n      this.getList();\n    }, 1);\n  }\n\n  async getList(isLoading: boolean = true) {\n    this.loading = isLoading;\n    this.param = {\n        typeOfScanner: 1,\n        username: this.getStrCurrentUser(),\n        woDocNo: this.woDocNo\n    }\n    \n    var res = await this.empScanService.GetListMachineCheckIn(1, this.param.username, this.param.woDocNo).finally(() => this.loading = false);\n    this.data = res;\n  }\n\n  private getStrCurrentUser() {\n    let strCurrentUser='';\n    this.identityService.currentUser.subscribe(res => {\n      strCurrentUser = res.Member_ID;\n    }); \n    return strCurrentUser;\n  }\n\n  async openWOsFilterModal() {\n    await this.utilityService.showLoader();\n    \n    const modal = await this.modalController.create({\n      component: FilterWoModalComponent,\n    });\n    modal.onDidDismiss().then(async (dataReturned) => {\n      if (dataReturned.data) {\n        this.woDocNo = dataReturned.data;\n        this.model = Object.assign({}, this.model, {\n          woDocNo: dataReturned.data.woDocNo,\n        });\n        this.getList();\n      }\n    });\n    return await modal\n      .present()\n      .finally(() => this.utilityService.hideLoader());\n}\n\nclearWODocNo(ev) {\n  ev.stopPropagation();\n  this.model.woDocNo = \"\";\n  this.woDocNo = {};\n}\n\nasync openEmpsFilterModal() {\n  await this.utilityService.showLoader();\n  const modal = await this.modalController.create({\n      component: FilterEmpModalComponent,\n      componentProps: {\n        woDocNo: this.woDocNo\n    },\n  });\n  modal.onDidDismiss().then(async (dataReturned) => {\n      if (dataReturned.data) {\n          this.empID = dataReturned.data;\n          this.model = Object.assign({}, this.model, {\n              empID: dataReturned.data.empID,\n          });\n          this.getList(true);\n      }\n  });\n  return await modal\n      .present()\n      .finally(() => this.utilityService.hideLoader());\n}\n\nclearEmpID(ev) {\n  ev.stopPropagation();\n  this.model.empID = \"\";\n  this.empID = {};\n}\n\nasync delete(item: any)\n{\n  const alert = await this.alertController.create({\n    header: 'Thông báo!',\n    message: 'Xoá thông tin máy Scan QR Code',\n    buttons: [\n      {\n        text: 'Huỷ bỏ',\n        role: 'cancel',\n        handler: (blah) => {\n          console.log('Confirm Cancel');\n        }\n      },\n      {\n        text: 'Xác nhận',\n        handler: async () => {\n          const check = await this.empScanService.DeleteMachineCheckIn(item);\n        \n          setTimeout(() => {\n            this.getList();\n          }, 1);\n        }\n      }\n    ]\n    }); await alert.present();\n  }\n\n  machineScanner() {\n    this.barcodeScanner\n      .scan(this.barcodeScannerOptions)\n      .then((data) => {\n        if (data.cancelled) {\n          console.log(\"User cancelled the action!\");\n          return false;\n        } else if (data.text && data.text != \"\")\n          this.getMachineByQRCode(data.text);\n          this.getList();\n      })\n      .catch((err) => {\n        this.utilityService.showToast(JSON.stringify(err));\n      });\n  }\n\n  getMachineByQRCode(qrCode)\n  {\n    if (qrCode.includes('_')) {\n      let result = qrCode.split('_');\n      this.paramqrmc = {\n        MachineID: result[0] ?? \"\",\n        MachineName: result[1] ?? \"\",\n        DeptName: result[2] ?? \"\",\n        StartDate: result[3] ?? \"\",\n        CheckInDT: new Date(),\n        Username: result[4] ?? \"\"\n      };\n    }\n    else {\n        this.paramqrmc = {\n            MachineID: '',\n            MachineName: '',\n            DeptName: '',\n            StartDate: '',\n            CheckInDT: new Date(1900, 1, 1),\n            Username: ''\n        };\n    }\n    var res = this.empScanService.GetMachineByQRCode(this.paramqrmc.MachineID).finally();\n    this.machineModelSet(res);\n    this.empScanService.SaveMachineByQRCode(res);\n  }\n\n  machineModelSet(item) {\n    if (!item)\n      return;\n    item[0] = Object.assign({}, item[0], {\n        woDocNo: this.woDocNo.woDocNo\n    });\n    item[0] = Object.assign({}, item[0], {\n      empID: this.empID.empID\n    });\n    this.data.push(item[0]);\n}\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ModalController, NavParams, AlertController } from \"@ionic/angular\";\nimport * as _ from \"lodash\";\nimport { BarcodeScanner,BarcodeScannerOptions } from '@awesome-cordova-plugins/barcode-scanner/ngx';\nimport { EmpScanService } from \"./core/services/empscan.service\"\nimport { UtilityService } from \"src/app/shared\";\nimport { FilterWoModalComponent } from \"./filter-wo-modal.component\";\nimport { FilterStageModalComponent } from \"./filter-stage-modal.component\";\nimport { IdentityService } from \"src/app/shared/services\";\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss'],\n})\nexport class ListComponent implements OnInit {\n  searchTerm: string = \"\";\n  loading: boolean = true;\n  routeLink: string = \"\";\n  today: any = new Date();\n  barcodeScannerOptions: BarcodeScannerOptions;\n  userName: any;\n  emps: any = [];\n  data: any = [];\n  model: any = [];\n  woDocNo: any;\n  stageID: any;\n  isNativePlatform: boolean = true;\n  platformStr: string = 'web';\n  param: { typeOfScanner: number; username: any; woDocNo: any; };\n  paramqr: { EmpID: any; EmpName: any; DeptName: any; StartDate: any; CheckInDT: Date; };\n\n  constructor(\n    private empScanService: EmpScanService,\n    private alertController: AlertController,\n    private modalController: ModalController,\n    private identityService: IdentityService,\n    private utilityService: UtilityService,\n    private barcodeScanner: BarcodeScanner,\n  ) { }\n\n  ngOnInit() {}\n\n  ionViewWillEnter() {\n    setTimeout(() => {\n      this.getList();\n    }, 1);\n  }\n  async getList(isLoading: boolean = true) {\n    this.loading = isLoading;\n    this.param = {\n        typeOfScanner: 1,\n        username: this.getStrCurrentUser(),\n        woDocNo: this.woDocNo\n    }\n    \n    var res = await this.empScanService.GetListEmpCheckIn(1, this.param.username, this.param.woDocNo).finally(() => this.loading = false);\n    this.data = res;\n  }\n\n  private getStrCurrentUser() {\n    let strCurrentUser='';\n    this.identityService.currentUser.subscribe(res => {\n      strCurrentUser = res.Member_ID;\n    }); \n    return strCurrentUser;\n  }\n\n  async openWOsFilterModal() {\n    await this.utilityService.showLoader();\n    \n    const modal = await this.modalController.create({\n      component: FilterWoModalComponent,\n    });\n    modal.onDidDismiss().then(async (dataReturned) => {\n      if (dataReturned.data) {\n        this.woDocNo = dataReturned.data;\n        this.model = Object.assign({}, this.model, {\n          woDocNo: dataReturned.data.woDocNo,\n        });\n        this.getList();\n      }\n    });\n    return await modal\n      .present()\n      .finally(() => this.utilityService.hideLoader());\n}\n\nclearWODocNo(ev) {\n    ev.stopPropagation();\n    this.woDocNo = \"\";\n    this.woDocNo = {};\n}\nasync openStagesFilterModal() {\n  await this.utilityService.showLoader();\n  const modal = await this.modalController.create({\n    component: FilterStageModalComponent,\n    componentProps: {\n      woDocNo: this.woDocNo\n  },\n  });\n  modal.onDidDismiss().then(async (dataReturned) => {\n    if (dataReturned.data) {\n      this.stageID = dataReturned.data.join(',');\n      this.model = Object.assign({}, this.model, {\n        stageID: dataReturned.data.join(','),\n      });\n      this.getList();\n    }\n  });\n  return await modal\n    .present()\n    .finally(() => this.utilityService.hideLoader());\n}\n\nclearStages(ev) {\n  ev.stopPropagation();\n  this.stageID = \"\";\n  this.stageID = {};\n}\n\nasync delete(item: any)\n{\n  const alert = await this.alertController.create({\n    header: 'Thông báo!',\n    message: 'Xoá thông tin nhân viên Scan QR Code',\n    buttons: [\n      {\n        text: 'Huỷ bỏ',\n        role: 'cancel',\n        handler: (blah) => {\n          console.log('Confirm Cancel');\n        }\n      },\n      {\n        text: 'Xác nhận',\n        handler: async () => {\n          const check = await this.empScanService.DeleteEmpCheckIn(item);\n          // if (check)\n          //   this._utilityService.showAlert('Xoá thành công');\n\n          setTimeout(() => {\n            this.getList();\n          }, 1);\n        }\n      }\n    ]\n    }); await alert.present();\n  }\n\n  async update(item: any) {\n    const alert = await this.alertController.create({\n      header: 'Thông báo',\n      message: 'Cập nhật số lượng',\n      inputs: [\n        {\n            name: 'quantity',\n            type: 'number'\n        }\n      ],    \n      buttons: [\n        {\n          text: 'Huỷ bỏ',\n          role: 'cancel',\n          handler: (blah) => {\n            console.log('Confirm Cancel');\n          }\n        },\n        {\n          text: 'Xác nhận',\n          handler: async (alertData) => {\n            item = Object.assign({}, item, {\n              quantity: alertData.quantity\n          });\n          debugger\n          const check = await this.empScanService.UpdateEmpCheckIn(item);\n            setTimeout(() => {\n              this.getList();\n            }, 1);\n          }\n        }\n      ]\n      }); await alert.present();\n  }\n\n  employeeScanner() {\n    this.barcodeScanner\n      .scan(this.barcodeScannerOptions)\n      .then((data) => {\n        if (data.cancelled) {\n          console.log(\"User cancelled the action!\");\n          return false;\n        } else if (data.text && data.text != \"\")\n          this.getEmployeeByQRCodeIn(data.text);\n          this.getList();\n      })\n      .catch((err) => {\n        this.utilityService.showToast(JSON.stringify(err));\n      });\n  }\n  getEmployeeByQRCodeIn(qrCode)\n  {\n    if (qrCode.includes('-')) {\n      let result = qrCode.split('-');\n      this.paramqr = {\n          EmpID: result[0] ?? \"\",\n          EmpName: result[1] ?? \"\",\n          DeptName: result[2] ?? \"\",\n          StartDate: result[3] ?? \"\",\n          CheckInDT: new Date()\n      };\n    }\n    else {\n        this.paramqr = {\n            EmpID: qrCode,\n            EmpName: '',\n            DeptName: '',\n            StartDate: '',\n            CheckInDT: new Date(1900, 1, 1)\n        };\n    }\n    var res = this.empScanService.GetEmpByQRCode(this.paramqr.EmpID).finally();\n    this.employeeModelSet(res);\n    this.empScanService.SaveInEmpByQRCode(res);\n  }\n\n  employeeModelSet(item) {\n    if (!item)\n        return;\n    item[0] = Object.assign({}, item[0], {\n        woDocNo: this.woDocNo.woDocNo\n    });\n    item[0] = Object.assign({}, item[0], {\n        stageID: this.stageID\n    });\n    this.data.push(item[0]);\n}\n}\n\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ListComponent } from './list.component';\nimport { BaseModule } from '../base/base.module';\nimport { SharedModule } from '../shared.module';\nimport { DataToolService, SQLExecService } from 'src/app/shared/services';\nimport { FilterWoModalComponent } from './filter-wo-modal.component';\nimport { FilterStageModalComponent } from './filter-stage-modal.component';\nimport { ListMachineComponent } from './list-machine.component';\nimport { FilterEmpModalComponent } from './filter-emp-modal.component';\n\nconst routing: ModuleWithProviders<ProdscanqrcodeModule> = RouterModule.forChild([\n  {\n    path: 'list',\n    component: ListComponent,\n  },\n  {\n    path: 'list-machine',\n    component: ListMachineComponent,\n  },\n]);\n\n@NgModule({\n  declarations: [\n    ListComponent,\n    ListMachineComponent,\n    FilterWoModalComponent,\n    FilterStageModalComponent,\n    FilterEmpModalComponent\n  ],\n  imports: [\n    BaseModule,\n    SharedModule,\n    routing\n  ],\n  providers: [DataToolService, SQLExecService]\n})\nexport class ProdscanqrcodeModule { }\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"asp\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"closeModal()\\\" fill=\\\"clear\\\">\\n        <ion-icon name=\\\"close-outline\\\" size=\\\"large\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-searchbar #searchBar [(ngModel)]=\\\"searchTerm\\\" (ionChange)=\\\"filterEmps()\\\" cancelButtonIcon=\\\"\\\"\\n      debounce=\\\"500\\\" showCancelButton=\\\"never\\\" placeholder=\\\"Tìm kiếm nhân viên...\\\">\\n    </ion-searchbar>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <ng-container *ngIf=\\\"!loading; else skeletonTmpl\\\">\\n    <ion-list class=\\\"mt-10\\\">\\n      <ion-radio-group [(ngModel)]=\\\"radioModel\\\">\\n        <ion-item *ngFor=\\\"let item of emps\\\">\\n          <ion-label class=\\\"ion-text-wrap\\\">\\n            <h3>{{item.empID}}</h3>\\n            <p>\\n              {{item.empName}}\\n            </p>\\n          </ion-label>\\n          <ion-radio [value]=\\\"item.woDocNo\\\" color=\\\"asp\\\" slot=\\\"start\\\" (click)=\\\"onChangeRadio(item)\\\"></ion-radio>\\n        </ion-item>\\n      </ion-radio-group>\\n    </ion-list>\\n  </ng-container>\\n\\n  <ng-template #skeletonTmpl>\\n    <asp-skeleton></asp-skeleton>\\n  </ng-template>\\n</ion-content>\\n<ion-footer>\\n  <ion-button (click)=\\\"closeModal()\\\">ĐÓNG</ion-button>\\n</ion-footer>\";","export default \"<ion-header>\\n  <ion-toolbar color=\\\"asp\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"closeModal()\\\" fill=\\\"clear\\\">\\n        <ion-icon name=\\\"close-outline\\\" size=\\\"large\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-searchbar #searchBar [(ngModel)]=\\\"searchTerm\\\" (ionChange)=\\\"filterStages()\\\" cancelButtonIcon=\\\"\\\"\\n      debounce=\\\"500\\\" showCancelButton=\\\"never\\\" placeholder=\\\"Tìm kiếm công đoạn...\\\">\\n    </ion-searchbar>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <ng-container *ngIf=\\\"!loading; else skeletonTmpl\\\">\\n    <ion-list class=\\\"mt-10\\\">\\n      <!-- <ion-radio-group [(ngModel)]=\\\"radioModel\\\"> -->\\n        <ion-item *ngFor=\\\"let item of stages\\\">\\n          <ion-label class=\\\"ion-text-wrap\\\">\\n            <p>{{item.stageID}} - {{item.stageName}}</p>\\n            <!-- <p>\\n              {{item.stageName}}\\n            </p> -->\\n          </ion-label>\\n          <ion-checkbox (ionChange)=\\\"handleCheckboxChange($event, item)\\\"></ion-checkbox>\\n        </ion-item>\\n      <!-- </ion-radio-group> -->\\n    </ion-list>\\n  </ng-container>\\n\\n  <ng-template #skeletonTmpl>\\n    <asp-skeleton></asp-skeleton>\\n  </ng-template>\\n</ion-content>\\n<ion-footer>\\n  <ion-button (click)=\\\"closeModal()\\\">ĐÓNG</ion-button>\\n</ion-footer>\";","export default \"<ion-header>\\n  <ion-toolbar color=\\\"asp\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"closeModal()\\\" fill=\\\"clear\\\">\\n        <ion-icon name=\\\"close-outline\\\" size=\\\"large\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-searchbar #searchBar [(ngModel)]=\\\"searchTerm\\\" (ionChange)=\\\"filterWOs()\\\" cancelButtonIcon=\\\"\\\"\\n      debounce=\\\"500\\\" showCancelButton=\\\"never\\\" placeholder=\\\"Tìm kiếm lệnh sản xuất...\\\">\\n    </ion-searchbar>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <ng-container *ngIf=\\\"!loading; else skeletonTmpl\\\">\\n    <ion-list class=\\\"mt-10\\\">\\n      <ion-radio-group [(ngModel)]=\\\"radioModel\\\">\\n        <ion-item *ngFor=\\\"let item of wos\\\">\\n          <ion-label class=\\\"ion-text-wrap\\\">\\n            <h3>{{item.woDocNo}}</h3>\\n            <p>\\n              {{item.productID}}\\n            </p>\\n          </ion-label>\\n          <ion-radio [value]=\\\"item.woDocNo\\\" color=\\\"asp\\\" slot=\\\"start\\\" (click)=\\\"onChangeRadio(item)\\\"></ion-radio>\\n        </ion-item>\\n      </ion-radio-group>\\n    </ion-list>\\n  </ng-container>\\n\\n  <ng-template #skeletonTmpl>\\n    <asp-skeleton></asp-skeleton>\\n  </ng-template>\\n</ion-content>\\n<ion-footer>\\n  <ion-button (click)=\\\"closeModal()\\\">ĐÓNG</ion-button>\\n</ion-footer>\";","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar color=\\\"asp\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button [fill]=\\\"'clear'\\\" routerLink=\\\"/tabs/home\\\">\\n        <ion-icon slot=\\\"icon-only\\\" ios=\\\"chevron-back-outline\\\" md=\\\"arrow-back-outline\\\" size=\\\"default\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>MACHINE CHECK-IN BY QR CODE</ion-title>\\n    <ion-buttons slot=\\\"end\\\" fill=\\\"clear\\\">\\n      <ion-button>\\n        <i class=\\\"material-icons\\\">sort_by_alpha</i>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <div class=\\\"form-row\\\">\\n    <mat-form-field appearance=\\\"fill\\\">\\n      <mat-label>Lệnh sản xuất</mat-label>\\n      <input matInput name=\\\"woDocNo\\\" [(ngModel)]=\\\"model.woDocNo\\\" \\n      (focus)=\\\"openWOsFilterModal()\\\" required>\\n      <button style=\\\"font-size: 18px;\\\" mat-icon-button\\n        matSuffix>\\n        <mat-icon>clear</mat-icon>\\n      </button>\\n      <!-- <mat-hint align=\\\"end\\\">{{inventory?.ten_Kho}}</mat-hint> -->\\n    </mat-form-field>\\n\\n    <mat-form-field appearance=\\\"fill\\\">\\n      <mat-label>Nhân viên</mat-label>\\n      <input matInput name=\\\"empID\\\" [(ngModel)]=\\\"model.empID\\\" \\n      (focus)=\\\"openEmpsFilterModal()\\\" required>\\n      <button style=\\\"font-size: 18px;\\\" mat-icon-button\\n        matSuffix>\\n        <mat-icon>clear</mat-icon>\\n      </button>\\n      <!-- <mat-hint align=\\\"end\\\">{{inventory?.ten_Kho}}</mat-hint> -->\\n    </mat-form-field>\\n    <ion-row>\\n      <ion-col size=\\\"10\\\">\\n        <ion-searchbar class=\\\"m-0 p-0\\\" [ngModelOptions]=\\\"{standalone: true}\\\" showCancelButton=\\\"never\\\"\\n          (ionFocus)=\\\"null\\\" [(ngModel)]=\\\"searchTerm\\\" placeholder=\\\"Tìm kiếm...\\\">\\n        </ion-searchbar>\\n      </ion-col>\\n      <ion-col size=\\\"2\\\">\\n        <ion-button (click)=\\\"machineScanner()\\\" fill=\\\"clear\\\" class=\\\"ion-no-margin mt-8 p-0 btn-scan\\\" color=\\\"medium\\\">\\n          <ion-icon slot=\\\"icon-only\\\" size=\\\"large\\\" name=\\\"scan-sharp\\\"></ion-icon>\\n        </ion-button>\\n      </ion-col>\\n    </ion-row>\\n    <ion-grid>\\n      <ng-container *ngIf=\\\"!loading; else elseTemplate\\\">\\n        <ion-list class=\\\"mt-0 pt-0\\\">\\n          <ion-item detail=\\\"false\\\" button=\\\"false\\\" lines=\\\"{{totalCount>0?'inset':'none'}}\\\">\\n            <ion-label class=\\\"ion-no-margin ion-no-padding\\\" >\\n              <p text-bold>Tổng:&nbsp;{{totalCount | number}}</p>\\n            </ion-label>\\n          </ion-item>\\n  \\n          <ion-item *ngFor=\\\"let item of data;trackBy:trackBy\\\">\\n            <ion-button fill=\\\"clear\\\" [matMenuTriggerFor]=\\\"menu\\\" slot=\\\"start\\\" color=\\\"medium\\\">\\n              <ion-icon slot=\\\"start\\\" *ngIf=\\\"item.is_App;else desktopIcon\\\" name=\\\"phone-portrait-outline\\\"\\n                color=\\\"asp\\\">\\n              </ion-icon>\\n            </ion-button>\\n            <ng-template #desktopIcon>\\n              <ion-icon slot=\\\"start\\\" name=\\\"desktop-outline\\\" color=\\\"asp\\\"></ion-icon>\\n            </ng-template>\\n            <mat-menu #menu=\\\"matMenu\\\">\\n              <button mat-menu-item (click)=\\\"delete(item)\\\">\\n                <mat-icon>delete</mat-icon>\\n                <span>Xoá</span>\\n              </button>\\n            </mat-menu>\\n            <ion-label class=\\\"ion-no-padding\\\" routerLink=\\\"/components/inventory/detail/{{item.stt}}\\\">\\n              <h3>\\n                {{item.machineID}}\\n              </h3>\\n              <p>{{item.woDocNo}}</p>\\n              <p>{{item.empName}}</p>\\n            </ion-label>\\n            <ion-note slot=\\\"end\\\">\\n              <span class=\\\"asp-color-medium\\\">\\n                <p style=\\\"color: red;\\\">{{item.checkInDt | date: 'HH:mm:ss'}}</p>\\n                <p style=\\\"color: red\\\">{{item.checkOutDt | date: 'HH:mm:ss'}}</p>\\n              </span>\\n              <!-- <span class=\\\"asp-color-medium\\\">{{item.checkOutDt}}</span> -->\\n            </ion-note>\\n          </ion-item>\\n        </ion-list>\\n      </ng-container>\\n  \\n      <ng-template #elseTemplate>\\n        <asp-skeleton></asp-skeleton>\\n      </ng-template>\\n  \\n      <!-- <ion-infinite-scroll threshold=\\\"100px\\\" (ionInfinite)=\\\"loadMoreData($event)\\\">\\n        <ion-infinite-scroll-content loadingSpinner=\\\"bubbles\\\" loadingText=\\\"Loading more data...\\\">\\n        </ion-infinite-scroll-content>\\n      </ion-infinite-scroll> -->\\n  \\n    </ion-grid>\\n  </div>\\n</ion-content>\\n\";","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar color=\\\"asp\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button [fill]=\\\"'clear'\\\" routerLink=\\\"/tabs/home\\\">\\n        <ion-icon slot=\\\"icon-only\\\" ios=\\\"chevron-back-outline\\\" md=\\\"arrow-back-outline\\\" size=\\\"default\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>EMPLOYEE CHECK-IN BY QR CODE</ion-title>\\n    <ion-buttons slot=\\\"end\\\" fill=\\\"clear\\\">\\n      <ion-button>\\n        <i class=\\\"material-icons\\\">sort_by_alpha</i>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <div class=\\\"form-row\\\">\\n    <mat-form-field appearance=\\\"fill\\\">\\n      <mat-label>Lệnh sản xuất</mat-label>\\n      <input matInput name=\\\"woDocNo\\\" [(ngModel)]=\\\"model.woDocNo\\\" \\n      (focus)=\\\"openWOsFilterModal()\\\" required>\\n      <button style=\\\"font-size: 18px;\\\" mat-icon-button\\n        matSuffix>\\n        <mat-icon>clear</mat-icon>\\n      </button>\\n      <!-- <mat-hint align=\\\"end\\\">{{inventory?.ten_Kho}}</mat-hint> -->\\n    </mat-form-field>\\n\\n    <mat-form-field appearance=\\\"fill\\\">\\n      <mat-label>Công đoạn</mat-label>\\n      <input matInput name=\\\"stageID\\\" [(ngModel)]=\\\"model.stageID\\\" \\n      (focus)=\\\"openStagesFilterModal()\\\" required>\\n      <button style=\\\"font-size: 18px;\\\" mat-icon-button\\n        matSuffix>\\n        <mat-icon>clear</mat-icon>\\n      </button>\\n      <!-- <mat-hint align=\\\"end\\\">{{inventory?.ten_Kho}}</mat-hint> -->\\n    </mat-form-field>\\n    <ion-row>\\n      <ion-col size=\\\"10\\\">\\n        <ion-searchbar class=\\\"m-0 p-0\\\" [ngModelOptions]=\\\"{standalone: true}\\\" showCancelButton=\\\"never\\\"\\n          (ionFocus)=\\\"null\\\" [(ngModel)]=\\\"searchTerm\\\" placeholder=\\\"Tìm kiếm...\\\">\\n        </ion-searchbar>\\n      </ion-col>\\n      <ion-col size=\\\"2\\\">\\n        <ion-button (click)=\\\"employeeScanner()\\\" fill=\\\"clear\\\" class=\\\"ion-no-margin mt-8 p-0 btn-scan\\\" color=\\\"medium\\\">\\n          <ion-icon slot=\\\"icon-only\\\" size=\\\"large\\\" name=\\\"scan-sharp\\\"></ion-icon>\\n        </ion-button>\\n      </ion-col>\\n    </ion-row>\\n    <ion-grid>\\n      <ng-container *ngIf=\\\"!loading; else elseTemplate\\\">\\n        <ion-list class=\\\"mt-0 pt-0\\\">\\n          <ion-item detail=\\\"false\\\" button=\\\"false\\\" lines=\\\"{{totalCount>0?'inset':'none'}}\\\">\\n            <ion-label class=\\\"ion-no-margin ion-no-padding\\\" >\\n              <p text-bold>Tổng:&nbsp;{{totalCount | number}}</p>\\n            </ion-label>\\n          </ion-item>\\n  \\n          <ion-item *ngFor=\\\"let item of data;trackBy:trackBy\\\">\\n            <ion-button fill=\\\"clear\\\" [matMenuTriggerFor]=\\\"menu\\\" slot=\\\"start\\\" color=\\\"medium\\\">\\n              <ion-icon slot=\\\"start\\\" *ngIf=\\\"item.is_App;else desktopIcon\\\" name=\\\"phone-portrait-outline\\\"\\n                color=\\\"asp\\\">\\n              </ion-icon>\\n            </ion-button>\\n            <ng-template #desktopIcon>\\n              <ion-icon slot=\\\"start\\\" name=\\\"desktop-outline\\\" color=\\\"asp\\\"></ion-icon>\\n            </ng-template>\\n            <mat-menu #menu=\\\"matMenu\\\">\\n              <!-- <button *ngIf=\\\"perm?.allow_View\\\" mat-menu-item routerLink=\\\"/components/inventory/detail/{{item.stt}}\\\" detail=\\\"true\\\">\\n                <mat-icon>preview</mat-icon>\\n                <span>Xem chi tiết</span>\\n              </button> -->\\n              <button mat-menu-item (click)=\\\"update(item)\\\">\\n                <mat-icon>update</mat-icon>\\n                <span>Nhập số lượng</span>\\n              </button>\\n              <button mat-menu-item (click)=\\\"delete(item)\\\">\\n                <mat-icon>delete</mat-icon>\\n                <span>Xoá</span>\\n              </button>\\n            </mat-menu>\\n            <ion-label class=\\\"ion-no-padding\\\" routerLink=\\\"/components/inventory/detail/{{item.stt}}\\\">\\n              <h3>\\n                {{item.woDocNo}}\\n              </h3>\\n              <p>{{item.empName}}</p>\\n              <p>{{item.stageID}}</p>\\n            </ion-label>\\n            <ion-note slot=\\\"end\\\">\\n              <span class=\\\"asp-color-medium\\\">\\n                <p style=\\\"color: red;\\\">{{item.checkInDt | date: 'HH:mm:ss'}}</p>\\n                <p style=\\\"color: red\\\">{{item.checkOutDt | date: 'HH:mm:ss'}}</p>\\n              </span>\\n              <!-- <span class=\\\"asp-color-medium\\\">{{item.checkOutDt}}</span> -->\\n            </ion-note>\\n          </ion-item>\\n        </ion-list>\\n      </ng-container>\\n  \\n      <ng-template #elseTemplate>\\n        <asp-skeleton></asp-skeleton>\\n      </ng-template>\\n  \\n      <!-- <ion-infinite-scroll threshold=\\\"100px\\\" (ionInfinite)=\\\"loadMoreData($event)\\\">\\n        <ion-infinite-scroll-content loadingSpinner=\\\"bubbles\\\" loadingText=\\\"Loading more data...\\\">\\n        </ion-infinite-scroll-content>\\n      </ion-infinite-scroll> -->\\n  \\n    </ion-grid>\\n  </div>\\n</ion-content>\\n\";"],"names":[],"sourceRoot":"webpack:///"}